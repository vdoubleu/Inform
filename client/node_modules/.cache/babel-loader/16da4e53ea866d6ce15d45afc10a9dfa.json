{"ast":null,"code":"var _jsxFileName = \"/home/victor/Desktop/big project stuff/inform/client/src/components/addStory/PastPosted.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../../actions/mypostActions';\nimport './PastPosted.css';\n\nconst PastPosted = props => {\n  useEffect(() => {\n    props.fetchPosts();\n  }, []);\n  useEffect(() => {}, [props.newPost]);\n  const postItems = props.myPosts.map(post => /*#__PURE__*/React.createElement(\"button\", {\n    key: post.id,\n    id: post.id,\n    type: \"button\",\n    className: \"list-group-item list-group-item-action postButtons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }\n  }, \" \", post.title, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  }, \" \", post.body, \" \")));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-group\",\n    id: \"pastPostList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }\n  }, postItems));\n};\n\nconst mapStateToProps = state => ({\n  myPosts: state.myposts.myposts,\n  newPost: state.myposts.newpost\n});\n\nexport default connect(mapStateToProps, {\n  fetchPosts\n})(PastPosted);","map":{"version":3,"sources":["/home/victor/Desktop/big project stuff/inform/client/src/components/addStory/PastPosted.js"],"names":["React","useEffect","connect","fetchPosts","PastPosted","props","newPost","postItems","myPosts","map","post","id","title","body","mapStateToProps","state","myposts","newpost"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,6BAAzB;AAEA,OAAO,kBAAP;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAEzBJ,EAAAA,SAAS,CAAC,MAAM;AACbI,IAAAA,KAAK,CAACF,UAAN;AACF,GAFQ,EAEN,EAFM,CAAT;AAIAF,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,CAACI,KAAK,CAACC,OAAP,CAFM,CAAT;AAIA,QAAMC,SAAS,GAAGF,KAAK,CAACG,OAAN,CAAcC,GAAd,CAAkBC,IAAI,iBACrC;AAAQ,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAlB;AAAsB,IAAA,EAAE,EAAED,IAAI,CAACC,EAA/B;AAAmC,IAAA,IAAI,EAAC,QAAxC;AAAiD,IAAA,SAAS,EAAC,oDAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMD,IAAI,CAACE,KAAX,MADH,eAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKF,IAAI,CAACG,IAAV,MAFH,CADe,CAAlB;AAMA,sBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,EAAE,EAAC,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIN,SADJ,CADH,CADH;AAOF,CAvBD;;AAyBA,MAAMO,eAAe,GAAGC,KAAK,KAAK;AAC/BP,EAAAA,OAAO,EAAEO,KAAK,CAACC,OAAN,CAAcA,OADQ;AAE/BV,EAAAA,OAAO,EAAES,KAAK,CAACC,OAAN,CAAcC;AAFQ,CAAL,CAA7B;;AAKA,eAAef,OAAO,CAACY,eAAD,EAAkB;AAACX,EAAAA;AAAD,CAAlB,CAAP,CAAuCC,UAAvC,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {fetchPosts} from '../../actions/mypostActions';\n\nimport './PastPosted.css';\n\nconst PastPosted = props => {\n\n   useEffect(() => {\n      props.fetchPosts();\n   }, []);\n\n   useEffect(() => {\n      \n   }, [props.newPost]);\n\n   const postItems = props.myPosts.map(post => (\n      <button key={post.id} id={post.id} type=\"button\" className=\"list-group-item list-group-item-action postButtons\">\n         <h5> {post.title} </h5>\n         <p> {post.body} </p>\n      </button>\n   ));\n   return(\n      <div>\n         <div className=\"list-group\" id=\"pastPostList\">\n            {postItems}\n         </div>\n      </div>\n   );\n}\n\nconst mapStateToProps = state => ({\n   myPosts: state.myposts.myposts,\n   newPost: state.myposts.newpost\n});\n\nexport default connect(mapStateToProps, {fetchPosts})(PastPosted);\n"]},"metadata":{},"sourceType":"module"}